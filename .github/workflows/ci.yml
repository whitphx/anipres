name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  anipres:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/anipres

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm lint

      - name: Format check
        run: pnpm format --check

      - name: Test
        run: pnpm test

      - name: Build
        run: pnpm build

      - name: Package
        run: pnpm pack

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          path: packages/anipres/anipres-*.tgz
          name: anipres

  slidev-addon-anipres:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/slidev-addon-anipres

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm lint

      - name: Format check
        run: pnpm format --check

      # - name: Test
      #   run: pnpm test

  lint-app:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/app

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm lint

      - name: Format check
        run: pnpm format --check

  build-app:
    needs: [anipres, lint-app]

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/app

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - uses: actions/download-artifact@v4
        id: download-anipres-package
        with:
          name: anipres
          path: packages/anipres/anipres.tgz

      - name: Install anipres
        run: pnpm install ${{ steps.download-anipres-package.outputs.download-path }}
        working-directory: packages/anipres

      - name: Build
        run: pnpm build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: packages/app/dist

  # Deploy job
  deploy-app:
    if: github.ref_name == github.event.repository.default_branch
    needs: [build-app]

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
